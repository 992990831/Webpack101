{"version":3,"sources":["webpack://tsunittest/./src/Foo.ts","webpack://tsunittest/webpack/startup"],"names":["sum","a","reduce","acc","val","foo","element","user","Say","name","AsyncSay","Promise","resolve","reject","setTimeout","document","body","appendChild","Foo","age","createElement","innerHTML"],"mappings":"o+CAEa,EAAAA,IACP,W,IAAC,sDACD,OAAAC,EAAEC,QAAO,SAACC,EAAKC,GAAQ,OAAAD,EAAA,IAAW,IAExC,IAqBUE,EAEAC,EAEFC,EAzBR,2BAkBA,OAjBI,YAAAC,IAAA,SAAID,GACA,MAAO,SAASA,EAAKE,KAAI,KAGvB,YAAAC,SAAN,SAAeH,G,mEAWX,SAViB,IAAII,SAAgB,SAACC,EAASC,GAC3CC,YAAW,WACT,IACEF,EAAQ,SAASL,EAAKE,KAAI,KAC1B,SACAI,OAED,gBAKf,EAlBA,GAiCEE,SAASC,KAAKC,aAZNZ,EAAM,IAAIa,EAIZX,EAAY,CAAEE,KAAK,SAAUU,IAAI,KAF/Bb,EAAUS,SAASK,cAAc,QAG/BC,UAAYhB,EAAIG,IAAID,GAE5BF,EAAIK,SAASH,GAEND,OChCS,KAAK,EADC,K","file":"Foo.bundle.js","sourcesContent":["import { User } from './IFoo';\r\n\r\nexport const sum\r\n    = (...a: number[]) =>\r\n      a.reduce((acc, val) => acc + val, 0);\r\n\r\nclass Foo {\r\n    Say(user: User){\r\n        return `hello ${user.name}!`;\r\n    }\r\n\r\n    async AsyncSay(user: User) : Promise<string> {\r\n        const response = new Promise<string>((resolve, reject) => {\r\n            setTimeout(() => {\r\n              try {\r\n                resolve(`hello ${user.name}!`);\r\n              } catch {\r\n                reject();\r\n              }\r\n            }, 1000);\r\n        });\r\n      \r\n        return response;\r\n    }\r\n}\r\n\r\nfunction component() {\r\n    const foo = new Foo();\r\n    \r\n    const element = document.createElement('div');\r\n\r\n    let user:User = { name:'Maggie', age:20 }\r\n    element.innerHTML = foo.Say(user);\r\n\r\n    foo.AsyncSay(user);\r\n\r\n    return element;\r\n  }\r\n\r\n  document.body.appendChild(component());\r\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = {};\n__webpack_modules__[404](0, __webpack_exports__);\n"],"sourceRoot":""}